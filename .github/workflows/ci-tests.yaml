# This workflow runs after a pull-request has been approved by a reviewer.

name: CI Tests
run-name: ${{ github.actor }} is running Pull Request pre-merge tests

on:
  push:
  schedule:
    - cron: '0 */6 * * *'

jobs:
  build-gem5:
    runs-on: [self-hosted, linux, x64, build]
    container: gcr.io/gem5-test/ubuntu-22.04_all-dependencies:latest
    outputs:
      artifactname: ${{ steps.name.outputs.test }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - id: name
        run: echo "test=$(date +"%Y-%m-%d_%H.%M.%S")-artifact" >> $GITHUB_OUTPUT
      - name: Build gem5
        run: |
          scons build/ALL/gem5.opt -j $(nproc)
      - uses: actions/upload-artifact@v3
        with:
          name: ${{ steps.name.outputs.test }}
          path: build/ALL/gem5.opt
      - run: echo "This job's status is ${{ job.status }}."

  unittests-all-opt:
    runs-on: [self-hosted, Linux, X64, run]
    container:
      image: gcr.io/gem5-test/ubuntu-22.04_all-dependencies:latest
    timeout-minutes: 60
    steps:
    - uses: actions/checkout@v3
    - name: CI Unittests
      working-directory: ${{ github.workspace }}
      run: scons build/ALL/unittests.opt -j $(nproc)        # How to add threads here?
    - run: echo "This job's status is ${{ job.status }}."

  testlib-quick:
    runs-on: [self-hosted, Linux, X64, run]
    container: gcr.io/gem5-test/ubuntu-22.04_all-dependencies:latest
    needs: build-gem5
    timeout-minutes: 360     # 6 hours
    steps:
    - uses: actions/checkout@v3
    - uses: actions/download-artifact@v3
      with:
        name: ${{needs.build-gem5.outputs.artifactname}}
        path: build/ALL
    - run: chmod u+x build/ALL/gem5.opt
    - name: The TestLib CI Tests
      working-directory: ${{ github.workspace }}/tests
      run: ./main.py run --skip-build      # How to add threads here?
    - run: |
        zip -r output.zip tests/testing-results
    - uses: actions/upload-artifact@v3
      env:
        MY_STEP_VAR: ${{github.job}}_COMMIT.${{github.sha}}_RUN.${{github.run_id}}_ATTEMPT.${{github.run_attempt}}
      with:
        name: ${{ env.MY_STEP_VAR }}
        path: output.zip
        retention-days: 7
    - run: echo "This job's status is ${{ job.status }}."
