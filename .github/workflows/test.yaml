name: GitHub Actions gem5 Test Run
run-name: Testing gem5art
on: [push]
jobs:
  Explore-GitHub-Actions:
    runs-on: [self-hosted, linux, x64]
    # running container with only a single arguement passes the image being used
    container: gcr.io/gem5-test/ubuntu-22.04_all-dependencies:latest

    steps:
    # checks out repository, should be more useful when
    # running checks on changed files
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      # - name: Build and run gem5
      #   run: |
      #     scons build/X86/gem5.opt -j $(nproc)

      # - name: Step 3 - Use the Upload Artifact GitHub Action
      #   uses: actions/upload-artifact@v2
      #   with:
      #     name: assets-for-download
      #     path: build/X86

      - name: Run gem5art tests
        run: |
          mkdir -p .pyenv
          python3 -m venv .pyenv
          source .pyenv/bin/activate

          # Install the packages
          pip install -e util/gem5art/artifact
          pip install -e util/gem5art/run
          pip install -e util/gem5art/tasks

          # Run the gem5art artificat tests.
          cd util/gem5art/artifact
          python3 -m unittest
          mypy -p gem5art.artifact

          # Run the gem5art run tests.
          cd ../run
          python3 -m unittest
          mypy -p gem5art.run

          # Run the gem5art task tests.
          cd ../tasks
          python3 -m unittest
          mypy -p gem5art.tasks

      # double checking that steps are run chronologically
      - name: Run gem5 separately (memory_traffic.py)
        run: |
          build/X86/gem5.opt configs/learning_gem5/part1/simple.py

      - run: echo "üçè This job's status is ${{ job.status }}."
