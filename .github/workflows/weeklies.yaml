name: Weekly Tests
run-name: Testing Weeklies
#  allows us to repeat this daily at 2am
#  https://docs.github.com/en/actions/using-workflows/events-that-trigger-workflows#schedule
# on:
#   schedule:
#     - cron:  '0 2 * * *'
on: [push]

# This is a WIP file for recreating weekly.sh
jobs:
  Weeklies:
    runs-on: [self-hosted, linux, x64]
    # running container with only a single arguement passes the image being used
    container: gcr.io/gem5-test/ubuntu-22.04_all-dependencies:latest
    timeout-minutes: 4320 # 3 days
    env:
      gem5_root: /runner/_work/gem5-actions/gem5-actions

    steps:
    # checks out repository, should be more useful when
    # running checks on changed files
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      # - name: Run very-long tests
      #   run: |
      #     cd tests
      #     ./main.py run --length very-long -j $(nproc) -t8 -vv

      #     mkdir -p tests/testing-results

      - run: echo "üçè This job's status is ${{ job.status }}."

  GPU-Tests:
    runs-on: [self-hosted, linux, x64]
    # container: gcr.io/gem5-test/gcn-gpu:latest
    timeout-minutes: 1440 # 24 hours

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: start gpu tests
        run: |
          rm -rf gem5-resources
          rm -f coAuthorsDBLP.graph 1k_128k.gr result.out
          pwd

      - name: Check out gem5 resources
        run: |
          git clone https://gem5.googlesource.com/public/gem5-resources \
          "gem5-resources"
          cd gem5-resources
          git checkout develop
          cd ../

      # - name: Install Docker Buildx
      #   run: |
      #     mkdir -p "$HOME/.docker/cli-plugins"
      #     curl -SsL "https://github.com/docker/buildx/releases/download/v0.7.1/buildx-v0.7.1.linux-amd64" -o "$HOME/.docker/cli-plugins/docker-buildx"
      #     chmod +x "$HOME/.docker/cli-plugins/docker-buildx"
      #     export DOCKER_CLI_EXPERIMENTAL=enabled
      #     docker context create buildx-build
      #     docker buildx create buildx-build
      
      # - name: Set up Docker Context for Buildx
      #   id: buildx-context
      #   run: |
      #     docker context create builders
          
      # - name: Set up Docker Buildx
      #   id: buildx
      #   uses: docker/setup-buildx-action@v1
      #   with:
      #     version: latest
      #     endpoint: builders
      # - name: Set up Docker Buildx
      #   uses: docker/setup-buildx-action@v2
      #   env:
      #     DOCKER_CONTEXT: buildx-build
      #   # - name: Set up Docker Buildx
      #   #   uses: docker/setup-buildx-action@v2
      #   # - name: Build and push
      #   #   uses: docker/build-push-action@v3
      - name: create docker images
        run: |
          docker pull gcr.io/gem5-test/gcn-gpu:latest
          docker build -t hacc-test-weekly gem5-resources/src/gpu/halo-finder  
          pwd

      # - name: Set up Docker Buildx
      #   # uses: docker/setup-buildx-action@v2
      #   uses: docker/build-push-action@v3
      #   with:
      #     context: ./gem5-resources/src/gpu/halo-finder 
      #     # file: gem5-resources/src/gpu/halo-finder 
      #     tags: hacc-test-weekly
      #     # build-args: |
      #     #     "NPM_TOKEN=${{ secrets.TOKEN }}"
      #     push: true

      
      - name: start running tests
        run: |
          docker run --rm -u $UID:$GID --volume "$gem5_root":"$gem5_root" -w \
            "$gem5_root" --memory=24g hacc-test-weekly bash -c \
            "scons build/GCN3_X86/gem5.opt -j$(nproc) --ignore-style \
            || rm -rf build && scons build/GCN3_X86/gem5.opt -j$(nproc) \
            --ignore-style"
          
          docker run --rm -u $UID:$GID --volume "$gem5_root":"$gem5_root" -w \
            "$gem5_root/util/m5" --memory=24g hacc-test-weekly bash -c \
            "export TERM=xterm-256color ; scons build/x86/out/m5" 

      - name: lulesh tests
        run: |
          docker run --rm --volume "$gem5_root":"$gem5_root" -w \
            "$gem5_root/gem5-resources/src/gpu/lulesh" \
            -u $UID:$GID --memory=24g hacc-test-weekly bash -c \
            "make"
          docker run --rm -u $UID:$GID --volume "$gem5_root":"$gem5_root" -w \
            "$gem5_root" --memory=24g \
            hacc-test-weekly build/GCN3_X86/gem5.opt configs/example/apu_se.py -n3 \
            --mem-size=8GB --reg-alloc-policy=dynamic \
            --benchmark-root="$gem5_root/gem5-resources/src/gpu/lulesh/bin" -c lulesh
