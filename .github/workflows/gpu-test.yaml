# This workflow runs all of the very-long tests within main.py

name: Running gpu tests
run-name: ${{ github.actor }} is running the gpu tests


on:
  # Runs every Sunday from 7AM UTC
  push:
  # schedule:
  #   - cron:  '00 7 * * 6'

jobs:
  build-gem5:
    runs-on: [self-hosted, linux, x64, build]
    container: mkjost/testing-gpu-image:latest
    timeout-minutes: 4320 # 3 days
    steps:
      - uses: actions/checkout@v3
        with:
          # Scheduled workflows run on the default branch by default. We
          # therefore need to explicitly checkout the develop branch.
          ref: develop
      - name: checkout gem5 resources
        working-directory: ${{ github.workspace }}
        run: |
          git clone https://gem5.googlesource.com/public/gem5-resources
          cd gem5-resources
          git checkout develop
      - name: Build gem5.opt
        working-directory: ${{ github.workspace }}
        run: scons build/GCN3_X86/gem5.opt -j4 --ignore-style || rm -rf build && scons build/GCN3_X86/gem5.opt -j4 --ignore-style
      - name: Compile m5ops and x86
        working-directory: ${{ github.workspace }}/util/m5
        run: |
          export TERM=xterm-256color
          scons build/x86/out/m5
      - name: Build LULESH
        working-directory: ${{ github.workspace }}/gem5-resources/src/gpu/lulesh
        run:  make
      - name: Run LULUESH tests
        working-directory: ${{ github.workspace }}
        run: build/GCN3_X86/gem5.opt configs/example/apu_se.py -n3 --mem-size=8GB --reg-alloc-policy=dynamic --benchmark-root="gem5-resources/src/gpu/lulesh/bin" -c lulesh

      - name: Setup cmark for DNNMark
        working-directory: ${{ github.workspace }}/gem5-resources/src/gpu/DNNMark
        run: ./setup.sh HIP
      - name: Make the DNNMark library
        working-directory: ${{ github.workspace }}/gem5-resources/src/gpu/DNNMark/build
        run: make -j4
      - name: Generate cachefiles #iffy on working directory
        working-directory: ${{ github.workspace }}/gem5-resources/src/gpu/DNNMark/
        run: python3 generate_cachefiles.py cachefiles.csv --gfx-version=gfx801 --num-cus=4
      - name: Generate mmap data
        working-directory: ${{ github.workspace }}/gem5-resources/src/gpu/DNNMark
        run: |
          g++ -std=c++0x generate_rand_data.cpp -o generate_rand_data
          ./generate_rand_data
      - name: Run DNNMark
        working-directory: ${{ github.workspace }}/gem5-resources/src/gpu/DNNMark
        run: |
          ${{ github.workspace }}/build/GCN3_X86/gem5.opt ${gem5_root}/configs/example/apu_se.py -n3 --reg-alloc-policy=dynamic --benchmark-root="build/benchmarks/test_fwd_softmax" -c dnnmark_test_fwd_softmax --options="-config config_example/softmax_config.dnnmark -mmap mmap.bin"
          ${{ github.workspace }}/build/GCN3_X86/gem5.opt ${gem5_root}/configs/example/apu_se.py -n3 --reg-alloc-policy=dynamic --benchmark-root="build/benchmarks/test_fwd_pool" -c dnnmark_test_fwd_pool --options="-config config_example/pool_config.dnnmark -mmap mmap.bin"
          ${{ github.workspace }}/build/GCN3_X86/gem5.opt ${gem5_root}/configs/example/apu_se.py -n3 --reg-alloc-policy=dynamic --benchmark-root="build/benchmarks/test_bwd_bn" -c dnnmark_test_bwd_bn --options="-config config_example/bn_config.dnnmark -mmap mmap.bin"

      - name: Build HACC
        working-directory: ${{ github.workspace }}/gem5-resources/src/gpu/halo-finder/src
        run: make hip/ForceTreeTest
      - name: Run HACC tests
        working-directory: ${{ github.workspace }}
        run: build/GCN3_X86/gem5.opt configs/example/apu_se.py -n3 --reg-alloc-policy=dynamic --benchmark-root=gem5-resources/src/gpu/halo-finder/src/hip -c ForceTreeTest --options="0.5 0.1 64 0.1 1 N 12 rcb"



      # test pannotia
      - name: Build BC
        working-directory: ${{ github.workspace }}/gem5-resources/src/gpu/pannotia/bc
        run: |
          export GEM5_PATH=${{ github.workspace }}
          make gem5-fusion
      - name: Run BC
        working-directory: ${{ github.workspace }}
        run: |
          wget http://dist.gem5.org/dist/develop/datasets/pannotia/bc/1k_128k.gr
          build/GCN3_X86/gem5.opt configs/example/apu_se.py -n3 --mem-size=8GB --reg-alloc-policy=dynamic --benchmark-root=gem5-resources/src/gpu/pannotia/bc/bin -c bc.gem5 --options="1k_128k.gr"

      - name: Build Color Max
        working-directory: ${{ github.workspace }}/gem5-resources/src/gpu/pannotia/color
        run: |
          export GEM5_PATH=${{ github.workspace }}
          make gem5-fusion
      - name: run Color (Max)
        working-directory: ${{ github.workspace }}
        run: build/GCN3_X86/gem5.opt configs/example/apu_se.py -n3 --mem-size=8GB --reg-alloc-policy=dynamic --benchmark-root=gem5-resources/src/gpu/pannotia/color/bin -c color_max.gem5 --options="1k_128k.gr 0"
      - name: build Color (MaxMin)
        working-directory: ${{ github.workspace }}/gem5-resources/src/gpu/pannotia/color
        run: |
          export GEM5_PATH=${{ github.workspace }}
          export VARIANT=MAXMIN
          make gem5-fusion
      - name: run Color (MaxMin)
        working-directory: ${{ github.workspace }}
        run: build/GCN3_X86/gem5.opt configs/example/apu_se.py -n3 --mem-size=8GB --reg-alloc-policy=dynamic --benchmark-root=gem5-resources/src/gpu/pannotia/color/bin -c color_maxmin.gem5 --options="1k_128k.gr 0"

      - name: build FW
        working-directory: ${{ github.workspace }}/gem5-resources/src/pannotia/fw
        run: |
          export GEM5_PATH=${{ github.workspace }}
          make gem5-fusion
      - name: run FW
        working-directory: ${{ github.workspace }}
        run: build/GCN3_X86/gem5.opt configs/example/apu_se.py -n3 --mem-size=8GB --reg-alloc-policy=dynamic --benchmark-root=gem5-resources/src/gpu/pannotia/fw/bin -c fw_hip.gem5 --options="1k_128k.gr"

      - name: build MIS
        working-directory: ${{ github.workspace }}/gem5-resources/src/gpu/pannotia/mis
        run: |
          export GEM5_PATH=${{ github.workspace }}
          make gem5-fusion
      - name: run MIS
        working-directory: ${{ github.workspace }}
        run: build/GCN3_X86/gem5.opt configs/example/apu_se.py -n3 --mem-size=8GB

      - name: Make the DNNMark library
        working-directory: ${{ github.workspace }}/gem5-resources/src/gpu/DNNMark/build
        run: make -j4
      - name: Make the DNNMark library
        working-directory: ${{ github.workspace }}/gem5-resources/src/gpu/DNNMark/build
        run: make -j4
      - name: Make the DNNMark library
        working-directory: ${{ github.workspace }}/gem5-resources/src/gpu/DNNMark/build
        run: make -j4